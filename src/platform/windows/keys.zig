pub const VIRTUAL_KEY = enum(u16) {
    @"0" = 48,
    @"1" = 49,
    @"2" = 50,
    @"3" = 51,
    @"4" = 52,
    @"5" = 53,
    @"6" = 54,
    @"7" = 55,
    @"8" = 56,
    @"9" = 57,
    A = 65,
    B = 66,
    C = 67,
    D = 68,
    E = 69,
    F = 70,
    G = 71,
    H = 72,
    I = 73,
    J = 74,
    K = 75,
    L = 76,
    M = 77,
    N = 78,
    O = 79,
    P = 80,
    Q = 81,
    R = 82,
    S = 83,
    T = 84,
    U = 85,
    V = 86,
    W = 87,
    X = 88,
    Y = 89,
    Z = 90,
    LBUTTON = 1,
    RBUTTON = 2,
    CANCEL = 3,
    MBUTTON = 4,
    XBUTTON1 = 5,
    XBUTTON2 = 6,
    BACK = 8,
    TAB = 9,
    CLEAR = 12,
    RETURN = 13,
    SHIFT = 16,
    CONTROL = 17,
    MENU = 18,
    PAUSE = 19,
    CAPITAL = 20,
    KANA = 21,
    // HANGEUL = 21, this enum value conflicts with KANA
    // HANGUL = 21, this enum value conflicts with KANA
    IME_ON = 22,
    JUNJA = 23,
    FINAL = 24,
    HANJA = 25,
    // KANJI = 25, this enum value conflicts with HANJA
    IME_OFF = 26,
    ESCAPE = 27,
    CONVERT = 28,
    NONCONVERT = 29,
    ACCEPT = 30,
    MODECHANGE = 31,
    SPACE = 32,
    PRIOR = 33,
    NEXT = 34,
    END = 35,
    HOME = 36,
    LEFT = 37,
    UP = 38,
    RIGHT = 39,
    DOWN = 40,
    SELECT = 41,
    PRINT = 42,
    EXECUTE = 43,
    SNAPSHOT = 44,
    INSERT = 45,
    DELETE = 46,
    HELP = 47,
    LWIN = 91,
    RWIN = 92,
    APPS = 93,
    SLEEP = 95,
    NUMPAD0 = 96,
    NUMPAD1 = 97,
    NUMPAD2 = 98,
    NUMPAD3 = 99,
    NUMPAD4 = 100,
    NUMPAD5 = 101,
    NUMPAD6 = 102,
    NUMPAD7 = 103,
    NUMPAD8 = 104,
    NUMPAD9 = 105,
    MULTIPLY = 106,
    ADD = 107,
    SEPARATOR = 108,
    SUBTRACT = 109,
    DECIMAL = 110,
    DIVIDE = 111,
    F1 = 112,
    F2 = 113,
    F3 = 114,
    F4 = 115,
    F5 = 116,
    F6 = 117,
    F7 = 118,
    F8 = 119,
    F9 = 120,
    F10 = 121,
    F11 = 122,
    F12 = 123,
    F13 = 124,
    F14 = 125,
    F15 = 126,
    F16 = 127,
    F17 = 128,
    F18 = 129,
    F19 = 130,
    F20 = 131,
    F21 = 132,
    F22 = 133,
    F23 = 134,
    F24 = 135,
    NAVIGATION_VIEW = 136,
    NAVIGATION_MENU = 137,
    NAVIGATION_UP = 138,
    NAVIGATION_DOWN = 139,
    NAVIGATION_LEFT = 140,
    NAVIGATION_RIGHT = 141,
    NAVIGATION_ACCEPT = 142,
    NAVIGATION_CANCEL = 143,
    NUMLOCK = 144,
    SCROLL = 145,
    OEM_NEC_EQUAL = 146,
    // OEM_FJ_JISHO = 146, this enum value conflicts with OEM_NEC_EQUAL
    OEM_FJ_MASSHOU = 147,
    OEM_FJ_TOUROKU = 148,
    OEM_FJ_LOYA = 149,
    OEM_FJ_ROYA = 150,
    LSHIFT = 160,
    RSHIFT = 161,
    LCONTROL = 162,
    RCONTROL = 163,
    LMENU = 164,
    RMENU = 165,
    BROWSER_BACK = 166,
    BROWSER_FORWARD = 167,
    BROWSER_REFRESH = 168,
    BROWSER_STOP = 169,
    BROWSER_SEARCH = 170,
    BROWSER_FAVORITES = 171,
    BROWSER_HOME = 172,
    VOLUME_MUTE = 173,
    VOLUME_DOWN = 174,
    VOLUME_UP = 175,
    MEDIA_NEXT_TRACK = 176,
    MEDIA_PREV_TRACK = 177,
    MEDIA_STOP = 178,
    MEDIA_PLAY_PAUSE = 179,
    LAUNCH_MAIL = 180,
    LAUNCH_MEDIA_SELECT = 181,
    LAUNCH_APP1 = 182,
    LAUNCH_APP2 = 183,
    OEM_1 = 186,
    OEM_PLUS = 187,
    OEM_COMMA = 188,
    OEM_MINUS = 189,
    OEM_PERIOD = 190,
    OEM_2 = 191,
    OEM_3 = 192,
    GAMEPAD_A = 195,
    GAMEPAD_B = 196,
    GAMEPAD_X = 197,
    GAMEPAD_Y = 198,
    GAMEPAD_RIGHT_SHOULDER = 199,
    GAMEPAD_LEFT_SHOULDER = 200,
    GAMEPAD_LEFT_TRIGGER = 201,
    GAMEPAD_RIGHT_TRIGGER = 202,
    GAMEPAD_DPAD_UP = 203,
    GAMEPAD_DPAD_DOWN = 204,
    GAMEPAD_DPAD_LEFT = 205,
    GAMEPAD_DPAD_RIGHT = 206,
    GAMEPAD_MENU = 207,
    GAMEPAD_VIEW = 208,
    GAMEPAD_LEFT_THUMBSTICK_BUTTON = 209,
    GAMEPAD_RIGHT_THUMBSTICK_BUTTON = 210,
    GAMEPAD_LEFT_THUMBSTICK_UP = 211,
    GAMEPAD_LEFT_THUMBSTICK_DOWN = 212,
    GAMEPAD_LEFT_THUMBSTICK_RIGHT = 213,
    GAMEPAD_LEFT_THUMBSTICK_LEFT = 214,
    GAMEPAD_RIGHT_THUMBSTICK_UP = 215,
    GAMEPAD_RIGHT_THUMBSTICK_DOWN = 216,
    GAMEPAD_RIGHT_THUMBSTICK_RIGHT = 217,
    GAMEPAD_RIGHT_THUMBSTICK_LEFT = 218,
    OEM_4 = 219,
    OEM_5 = 220,
    OEM_6 = 221,
    OEM_7 = 222,
    OEM_8 = 223,
    OEM_AX = 225,
    OEM_102 = 226,
    ICO_HELP = 227,
    ICO_00 = 228,
    PROCESSKEY = 229,
    ICO_CLEAR = 230,
    PACKET = 231,
    OEM_RESET = 233,
    OEM_JUMP = 234,
    OEM_PA1 = 235,
    OEM_PA2 = 236,
    OEM_PA3 = 237,
    OEM_WSCTRL = 238,
    OEM_CUSEL = 239,
    OEM_ATTN = 240,
    OEM_FINISH = 241,
    OEM_COPY = 242,
    OEM_AUTO = 243,
    OEM_ENLW = 244,
    OEM_BACKTAB = 245,
    ATTN = 246,
    CRSEL = 247,
    EXSEL = 248,
    EREOF = 249,
    PLAY = 250,
    ZOOM = 251,
    NONAME = 252,
    PA1 = 253,
    OEM_CLEAR = 254,
};

pub const VK_0: usize = @intFromEnum(VIRTUAL_KEY.@"0");
pub const VK_1: usize = @intFromEnum(VIRTUAL_KEY.@"1");
pub const VK_2: usize = @intFromEnum(VIRTUAL_KEY.@"2");
pub const VK_3: usize = @intFromEnum(VIRTUAL_KEY.@"3");
pub const VK_4: usize = @intFromEnum(VIRTUAL_KEY.@"4");
pub const VK_5: usize = @intFromEnum(VIRTUAL_KEY.@"5");
pub const VK_6: usize = @intFromEnum(VIRTUAL_KEY.@"6");
pub const VK_7: usize = @intFromEnum(VIRTUAL_KEY.@"7");
pub const VK_8: usize = @intFromEnum(VIRTUAL_KEY.@"8");
pub const VK_9: usize = @intFromEnum(VIRTUAL_KEY.@"9");
pub const VK_A: usize = @intFromEnum(VIRTUAL_KEY.A);
pub const VK_B: usize = @intFromEnum(VIRTUAL_KEY.B);
pub const VK_C: usize = @intFromEnum(VIRTUAL_KEY.C);
pub const VK_D: usize = @intFromEnum(VIRTUAL_KEY.D);
pub const VK_E: usize = @intFromEnum(VIRTUAL_KEY.E);
pub const VK_F: usize = @intFromEnum(VIRTUAL_KEY.F);
pub const VK_G: usize = @intFromEnum(VIRTUAL_KEY.G);
pub const VK_H: usize = @intFromEnum(VIRTUAL_KEY.H);
pub const VK_I: usize = @intFromEnum(VIRTUAL_KEY.I);
pub const VK_J: usize = @intFromEnum(VIRTUAL_KEY.J);
pub const VK_K: usize = @intFromEnum(VIRTUAL_KEY.K);
pub const VK_L: usize = @intFromEnum(VIRTUAL_KEY.L);
pub const VK_M: usize = @intFromEnum(VIRTUAL_KEY.M);
pub const VK_N: usize = @intFromEnum(VIRTUAL_KEY.N);
pub const VK_O: usize = @intFromEnum(VIRTUAL_KEY.O);
pub const VK_P: usize = @intFromEnum(VIRTUAL_KEY.P);
pub const VK_Q: usize = @intFromEnum(VIRTUAL_KEY.Q);
pub const VK_R: usize = @intFromEnum(VIRTUAL_KEY.R);
pub const VK_S: usize = @intFromEnum(VIRTUAL_KEY.S);
pub const VK_T: usize = @intFromEnum(VIRTUAL_KEY.T);
pub const VK_U: usize = @intFromEnum(VIRTUAL_KEY.U);
pub const VK_V: usize = @intFromEnum(VIRTUAL_KEY.V);
pub const VK_W: usize = @intFromEnum(VIRTUAL_KEY.W);
pub const VK_X: usize = @intFromEnum(VIRTUAL_KEY.X);
pub const VK_Y: usize = @intFromEnum(VIRTUAL_KEY.Y);
pub const VK_Z: usize = @intFromEnum(VIRTUAL_KEY.Z);
pub const VK_LBUTTON: usize = @intFromEnum(VIRTUAL_KEY.LBUTTON);
pub const VK_RBUTTON: usize = @intFromEnum(VIRTUAL_KEY.RBUTTON);
pub const VK_CANCEL: usize = @intFromEnum(VIRTUAL_KEY.CANCEL);
pub const VK_MBUTTON: usize = @intFromEnum(VIRTUAL_KEY.MBUTTON);
pub const VK_XBUTTON1: usize = @intFromEnum(VIRTUAL_KEY.XBUTTON1);
pub const VK_XBUTTON2: usize = @intFromEnum(VIRTUAL_KEY.XBUTTON2);
pub const VK_BACK: usize = @intFromEnum(VIRTUAL_KEY.BACK);
pub const VK_TAB: usize = @intFromEnum(VIRTUAL_KEY.TAB);
pub const VK_CLEAR: usize = @intFromEnum(VIRTUAL_KEY.CLEAR);
pub const VK_RETURN: usize = @intFromEnum(VIRTUAL_KEY.RETURN);
pub const VK_SHIFT: usize = @intFromEnum(VIRTUAL_KEY.SHIFT);
pub const VK_CONTROL: usize = @intFromEnum(VIRTUAL_KEY.CONTROL);
pub const VK_MENU: usize = @intFromEnum(VIRTUAL_KEY.MENU);
pub const VK_PAUSE: usize = @intFromEnum(VIRTUAL_KEY.PAUSE);
pub const VK_CAPITAL: usize = @intFromEnum(VIRTUAL_KEY.CAPITAL);
pub const VK_KANA: usize = @intFromEnum(VIRTUAL_KEY.KANA);
pub const VK_HANGEUL: usize = @intFromEnum(VIRTUAL_KEY.KANA);
pub const VK_HANGUL: usize = @intFromEnum(VIRTUAL_KEY.KANA);
pub const VK_IME_ON: usize = @intFromEnum(VIRTUAL_KEY.IME_ON);
pub const VK_JUNJA: usize = @intFromEnum(VIRTUAL_KEY.JUNJA);
pub const VK_FINAL: usize = @intFromEnum(VIRTUAL_KEY.FINAL);
pub const VK_HANJA: usize = @intFromEnum(VIRTUAL_KEY.HANJA);
pub const VK_KANJI: usize = @intFromEnum(VIRTUAL_KEY.HANJA);
pub const VK_IME_OFF: usize = @intFromEnum(VIRTUAL_KEY.IME_OFF);
pub const VK_ESCAPE: usize = @intFromEnum(VIRTUAL_KEY.ESCAPE);
pub const VK_CONVERT: usize = @intFromEnum(VIRTUAL_KEY.CONVERT);
pub const VK_NONCONVERT: usize = @intFromEnum(VIRTUAL_KEY.NONCONVERT);
pub const VK_ACCEPT: usize = @intFromEnum(VIRTUAL_KEY.ACCEPT);
pub const VK_MODECHANGE: usize = @intFromEnum(VIRTUAL_KEY.MODECHANGE);
pub const VK_SPACE: usize = @intFromEnum(VIRTUAL_KEY.SPACE);
pub const VK_PRIOR: usize = @intFromEnum(VIRTUAL_KEY.PRIOR);
pub const VK_NEXT: usize = @intFromEnum(VIRTUAL_KEY.NEXT);
pub const VK_END: usize = @intFromEnum(VIRTUAL_KEY.END);
pub const VK_HOME: usize = @intFromEnum(VIRTUAL_KEY.HOME);
pub const VK_LEFT: usize = @intFromEnum(VIRTUAL_KEY.LEFT);
pub const VK_UP: usize = @intFromEnum(VIRTUAL_KEY.UP);
pub const VK_RIGHT: usize = @intFromEnum(VIRTUAL_KEY.RIGHT);
pub const VK_DOWN: usize = @intFromEnum(VIRTUAL_KEY.DOWN);
pub const VK_SELECT: usize = @intFromEnum(VIRTUAL_KEY.SELECT);
pub const VK_PRINT: usize = @intFromEnum(VIRTUAL_KEY.PRINT);
pub const VK_EXECUTE: usize = @intFromEnum(VIRTUAL_KEY.EXECUTE);
pub const VK_SNAPSHOT: usize = @intFromEnum(VIRTUAL_KEY.SNAPSHOT);
pub const VK_INSERT: usize = @intFromEnum(VIRTUAL_KEY.INSERT);
pub const VK_DELETE: usize = @intFromEnum(VIRTUAL_KEY.DELETE);
pub const VK_HELP: usize = @intFromEnum(VIRTUAL_KEY.HELP);
pub const VK_LWIN: usize = @intFromEnum(VIRTUAL_KEY.LWIN);
pub const VK_RWIN: usize = @intFromEnum(VIRTUAL_KEY.RWIN);
pub const VK_APPS: usize = @intFromEnum(VIRTUAL_KEY.APPS);
pub const VK_SLEEP: usize = @intFromEnum(VIRTUAL_KEY.SLEEP);
pub const VK_NUMPAD0: usize = @intFromEnum(VIRTUAL_KEY.NUMPAD0);
pub const VK_NUMPAD1: usize = @intFromEnum(VIRTUAL_KEY.NUMPAD1);
pub const VK_NUMPAD2: usize = @intFromEnum(VIRTUAL_KEY.NUMPAD2);
pub const VK_NUMPAD3: usize = @intFromEnum(VIRTUAL_KEY.NUMPAD3);
pub const VK_NUMPAD4: usize = @intFromEnum(VIRTUAL_KEY.NUMPAD4);
pub const VK_NUMPAD5: usize = @intFromEnum(VIRTUAL_KEY.NUMPAD5);
pub const VK_NUMPAD6: usize = @intFromEnum(VIRTUAL_KEY.NUMPAD6);
pub const VK_NUMPAD7: usize = @intFromEnum(VIRTUAL_KEY.NUMPAD7);
pub const VK_NUMPAD8: usize = @intFromEnum(VIRTUAL_KEY.NUMPAD8);
pub const VK_NUMPAD9: usize = @intFromEnum(VIRTUAL_KEY.NUMPAD9);
pub const VK_MULTIPLY: usize = @intFromEnum(VIRTUAL_KEY.MULTIPLY);
pub const VK_ADD: usize = @intFromEnum(VIRTUAL_KEY.ADD);
pub const VK_SEPARATOR: usize = @intFromEnum(VIRTUAL_KEY.SEPARATOR);
pub const VK_SUBTRACT: usize = @intFromEnum(VIRTUAL_KEY.SUBTRACT);
pub const VK_DECIMAL: usize = @intFromEnum(VIRTUAL_KEY.DECIMAL);
pub const VK_DIVIDE: usize = @intFromEnum(VIRTUAL_KEY.DIVIDE);
pub const VK_F1: usize = @intFromEnum(VIRTUAL_KEY.F1);
pub const VK_F2: usize = @intFromEnum(VIRTUAL_KEY.F2);
pub const VK_F3: usize = @intFromEnum(VIRTUAL_KEY.F3);
pub const VK_F4: usize = @intFromEnum(VIRTUAL_KEY.F4);
pub const VK_F5: usize = @intFromEnum(VIRTUAL_KEY.F5);
pub const VK_F6: usize = @intFromEnum(VIRTUAL_KEY.F6);
pub const VK_F7: usize = @intFromEnum(VIRTUAL_KEY.F7);
pub const VK_F8: usize = @intFromEnum(VIRTUAL_KEY.F8);
pub const VK_F9: usize = @intFromEnum(VIRTUAL_KEY.F9);
pub const VK_F10: usize = @intFromEnum(VIRTUAL_KEY.F10);
pub const VK_F11: usize = @intFromEnum(VIRTUAL_KEY.F11);
pub const VK_F12: usize = @intFromEnum(VIRTUAL_KEY.F12);
pub const VK_F13: usize = @intFromEnum(VIRTUAL_KEY.F13);
pub const VK_F14: usize = @intFromEnum(VIRTUAL_KEY.F14);
pub const VK_F15: usize = @intFromEnum(VIRTUAL_KEY.F15);
pub const VK_F16: usize = @intFromEnum(VIRTUAL_KEY.F16);
pub const VK_F17: usize = @intFromEnum(VIRTUAL_KEY.F17);
pub const VK_F18: usize = @intFromEnum(VIRTUAL_KEY.F18);
pub const VK_F19: usize = @intFromEnum(VIRTUAL_KEY.F19);
pub const VK_F20: usize = @intFromEnum(VIRTUAL_KEY.F20);
pub const VK_F21: usize = @intFromEnum(VIRTUAL_KEY.F21);
pub const VK_F22: usize = @intFromEnum(VIRTUAL_KEY.F22);
pub const VK_F23: usize = @intFromEnum(VIRTUAL_KEY.F23);
pub const VK_F24: usize = @intFromEnum(VIRTUAL_KEY.F24);
pub const VK_NAVIGATION_VIEW: usize = @intFromEnum(VIRTUAL_KEY.NAVIGATION_VIEW);
pub const VK_NAVIGATION_MENU: usize = @intFromEnum(VIRTUAL_KEY.NAVIGATION_MENU);
pub const VK_NAVIGATION_UP: usize = @intFromEnum(VIRTUAL_KEY.NAVIGATION_UP);
pub const VK_NAVIGATION_DOWN: usize = @intFromEnum(VIRTUAL_KEY.NAVIGATION_DOWN);
pub const VK_NAVIGATION_LEFT: usize = @intFromEnum(VIRTUAL_KEY.NAVIGATION_LEFT);
pub const VK_NAVIGATION_RIGHT: usize = @intFromEnum(VIRTUAL_KEY.NAVIGATION_RIGHT);
pub const VK_NAVIGATION_ACCEPT: usize = @intFromEnum(VIRTUAL_KEY.NAVIGATION_ACCEPT);
pub const VK_NAVIGATION_CANCEL: usize = @intFromEnum(VIRTUAL_KEY.NAVIGATION_CANCEL);
pub const VK_NUMLOCK: usize = @intFromEnum(VIRTUAL_KEY.NUMLOCK);
pub const VK_SCROLL: usize = @intFromEnum(VIRTUAL_KEY.SCROLL);
pub const VK_OEM_NEC_EQUAL: usize = @intFromEnum(VIRTUAL_KEY.OEM_NEC_EQUAL);
pub const VK_OEM_FJ_JISHO: usize = @intFromEnum(VIRTUAL_KEY.OEM_NEC_EQUAL);
pub const VK_OEM_FJ_MASSHOU: usize = @intFromEnum(VIRTUAL_KEY.OEM_FJ_MASSHOU);
pub const VK_OEM_FJ_TOUROKU: usize = @intFromEnum(VIRTUAL_KEY.OEM_FJ_TOUROKU);
pub const VK_OEM_FJ_LOYA: usize = @intFromEnum(VIRTUAL_KEY.OEM_FJ_LOYA);
pub const VK_OEM_FJ_ROYA: usize = @intFromEnum(VIRTUAL_KEY.OEM_FJ_ROYA);
pub const VK_LSHIFT: usize = @intFromEnum(VIRTUAL_KEY.LSHIFT);
pub const VK_RSHIFT: usize = @intFromEnum(VIRTUAL_KEY.RSHIFT);
pub const VK_LCONTROL: usize = @intFromEnum(VIRTUAL_KEY.LCONTROL);
pub const VK_RCONTROL: usize = @intFromEnum(VIRTUAL_KEY.RCONTROL);
pub const VK_LMENU: usize = @intFromEnum(VIRTUAL_KEY.LMENU);
pub const VK_RMENU: usize = @intFromEnum(VIRTUAL_KEY.RMENU);
pub const VK_BROWSER_BACK: usize = @intFromEnum(VIRTUAL_KEY.BROWSER_BACK);
pub const VK_BROWSER_FORWARD: usize = @intFromEnum(VIRTUAL_KEY.BROWSER_FORWARD);
pub const VK_BROWSER_REFRESH: usize = @intFromEnum(VIRTUAL_KEY.BROWSER_REFRESH);
pub const VK_BROWSER_STOP: usize = @intFromEnum(VIRTUAL_KEY.BROWSER_STOP);
pub const VK_BROWSER_SEARCH: usize = @intFromEnum(VIRTUAL_KEY.BROWSER_SEARCH);
pub const VK_BROWSER_FAVORITES: usize = @intFromEnum(VIRTUAL_KEY.BROWSER_FAVORITES);
pub const VK_BROWSER_HOME: usize = @intFromEnum(VIRTUAL_KEY.BROWSER_HOME);
pub const VK_VOLUME_MUTE: usize = @intFromEnum(VIRTUAL_KEY.VOLUME_MUTE);
pub const VK_VOLUME_DOWN: usize = @intFromEnum(VIRTUAL_KEY.VOLUME_DOWN);
pub const VK_VOLUME_UP: usize = @intFromEnum(VIRTUAL_KEY.VOLUME_UP);
pub const VK_MEDIA_NEXT_TRACK: usize = @intFromEnum(VIRTUAL_KEY.MEDIA_NEXT_TRACK);
pub const VK_MEDIA_PREV_TRACK: usize = @intFromEnum(VIRTUAL_KEY.MEDIA_PREV_TRACK);
pub const VK_MEDIA_STOP: usize = @intFromEnum(VIRTUAL_KEY.MEDIA_STOP);
pub const VK_MEDIA_PLAY_PAUSE: usize = @intFromEnum(VIRTUAL_KEY.MEDIA_PLAY_PAUSE);
pub const VK_LAUNCH_MAIL: usize = @intFromEnum(VIRTUAL_KEY.LAUNCH_MAIL);
pub const VK_LAUNCH_MEDIA_SELECT: usize = @intFromEnum(VIRTUAL_KEY.LAUNCH_MEDIA_SELECT);
pub const VK_LAUNCH_APP1: usize = @intFromEnum(VIRTUAL_KEY.LAUNCH_APP1);
pub const VK_LAUNCH_APP2: usize = @intFromEnum(VIRTUAL_KEY.LAUNCH_APP2);
pub const VK_OEM_1: usize = @intFromEnum(VIRTUAL_KEY.OEM_1);
pub const VK_OEM_PLUS: usize = @intFromEnum(VIRTUAL_KEY.OEM_PLUS);
pub const VK_OEM_COMMA: usize = @intFromEnum(VIRTUAL_KEY.OEM_COMMA);
pub const VK_OEM_MINUS: usize = @intFromEnum(VIRTUAL_KEY.OEM_MINUS);
pub const VK_OEM_PERIOD: usize = @intFromEnum(VIRTUAL_KEY.OEM_PERIOD);
pub const VK_OEM_2: usize = @intFromEnum(VIRTUAL_KEY.OEM_2);
pub const VK_OEM_3: usize = @intFromEnum(VIRTUAL_KEY.OEM_3);
pub const VK_GAMEPAD_A: usize = @intFromEnum(VIRTUAL_KEY.GAMEPAD_A);
pub const VK_GAMEPAD_B: usize = @intFromEnum(VIRTUAL_KEY.GAMEPAD_B);
pub const VK_GAMEPAD_X: usize = @intFromEnum(VIRTUAL_KEY.GAMEPAD_X);
pub const VK_GAMEPAD_Y: usize = @intFromEnum(VIRTUAL_KEY.GAMEPAD_Y);
pub const VK_GAMEPAD_RIGHT_SHOULDER: usize = @intFromEnum(VIRTUAL_KEY.GAMEPAD_RIGHT_SHOULDER);
pub const VK_GAMEPAD_LEFT_SHOULDER: usize = @intFromEnum(VIRTUAL_KEY.GAMEPAD_LEFT_SHOULDER);
pub const VK_GAMEPAD_LEFT_TRIGGER: usize = @intFromEnum(VIRTUAL_KEY.GAMEPAD_LEFT_TRIGGER);
pub const VK_GAMEPAD_RIGHT_TRIGGER: usize = @intFromEnum(VIRTUAL_KEY.GAMEPAD_RIGHT_TRIGGER);
pub const VK_GAMEPAD_DPAD_UP: usize = @intFromEnum(VIRTUAL_KEY.GAMEPAD_DPAD_UP);
pub const VK_GAMEPAD_DPAD_DOWN: usize = @intFromEnum(VIRTUAL_KEY.GAMEPAD_DPAD_DOWN);
pub const VK_GAMEPAD_DPAD_LEFT: usize = @intFromEnum(VIRTUAL_KEY.GAMEPAD_DPAD_LEFT);
pub const VK_GAMEPAD_DPAD_RIGHT: usize = @intFromEnum(VIRTUAL_KEY.GAMEPAD_DPAD_RIGHT);
pub const VK_GAMEPAD_MENU: usize = @intFromEnum(VIRTUAL_KEY.GAMEPAD_MENU);
pub const VK_GAMEPAD_VIEW: usize = @intFromEnum(VIRTUAL_KEY.GAMEPAD_VIEW);
pub const VK_GAMEPAD_LEFT_THUMBSTICK_BUTTON: usize = @intFromEnum(VIRTUAL_KEY.GAMEPAD_LEFT_THUMBSTICK_BUTTON);
pub const VK_GAMEPAD_RIGHT_THUMBSTICK_BUTTON: usize = @intFromEnum(VIRTUAL_KEY.GAMEPAD_RIGHT_THUMBSTICK_BUTTON);
pub const VK_GAMEPAD_LEFT_THUMBSTICK_UP: usize = @intFromEnum(VIRTUAL_KEY.GAMEPAD_LEFT_THUMBSTICK_UP);
pub const VK_GAMEPAD_LEFT_THUMBSTICK_DOWN: usize = @intFromEnum(VIRTUAL_KEY.GAMEPAD_LEFT_THUMBSTICK_DOWN);
pub const VK_GAMEPAD_LEFT_THUMBSTICK_RIGHT: usize = @intFromEnum(VIRTUAL_KEY.GAMEPAD_LEFT_THUMBSTICK_RIGHT);
pub const VK_GAMEPAD_LEFT_THUMBSTICK_LEFT: usize = @intFromEnum(VIRTUAL_KEY.GAMEPAD_LEFT_THUMBSTICK_LEFT);
pub const VK_GAMEPAD_RIGHT_THUMBSTICK_UP: usize = @intFromEnum(VIRTUAL_KEY.GAMEPAD_RIGHT_THUMBSTICK_UP);
pub const VK_GAMEPAD_RIGHT_THUMBSTICK_DOWN: usize = @intFromEnum(VIRTUAL_KEY.GAMEPAD_RIGHT_THUMBSTICK_DOWN);
pub const VK_GAMEPAD_RIGHT_THUMBSTICK_RIGHT: usize = @intFromEnum(VIRTUAL_KEY.GAMEPAD_RIGHT_THUMBSTICK_RIGHT);
pub const VK_GAMEPAD_RIGHT_THUMBSTICK_LEFT: usize = @intFromEnum(VIRTUAL_KEY.GAMEPAD_RIGHT_THUMBSTICK_LEFT);
pub const VK_OEM_4: usize = @intFromEnum(VIRTUAL_KEY.OEM_4);
pub const VK_OEM_5: usize = @intFromEnum(VIRTUAL_KEY.OEM_5);
pub const VK_OEM_6: usize = @intFromEnum(VIRTUAL_KEY.OEM_6);
pub const VK_OEM_7: usize = @intFromEnum(VIRTUAL_KEY.OEM_7);
pub const VK_OEM_8: usize = @intFromEnum(VIRTUAL_KEY.OEM_8);
pub const VK_OEM_AX: usize = @intFromEnum(VIRTUAL_KEY.OEM_AX);
pub const VK_OEM_102: usize = @intFromEnum(VIRTUAL_KEY.OEM_102);
pub const VK_ICO_HELP: usize = @intFromEnum(VIRTUAL_KEY.ICO_HELP);
pub const VK_ICO_00: usize = @intFromEnum(VIRTUAL_KEY.ICO_00);
pub const VK_PROCESSKEY: usize = @intFromEnum(VIRTUAL_KEY.PROCESSKEY);
pub const VK_ICO_CLEAR: usize = @intFromEnum(VIRTUAL_KEY.ICO_CLEAR);
pub const VK_PACKET: usize = @intFromEnum(VIRTUAL_KEY.PACKET);
pub const VK_OEM_RESET: usize = @intFromEnum(VIRTUAL_KEY.OEM_RESET);
pub const VK_OEM_JUMP: usize = @intFromEnum(VIRTUAL_KEY.OEM_JUMP);
pub const VK_OEM_PA1: usize = @intFromEnum(VIRTUAL_KEY.OEM_PA1);
pub const VK_OEM_PA2: usize = @intFromEnum(VIRTUAL_KEY.OEM_PA2);
pub const VK_OEM_PA3: usize = @intFromEnum(VIRTUAL_KEY.OEM_PA3);
pub const VK_OEM_WSCTRL: usize = @intFromEnum(VIRTUAL_KEY.OEM_WSCTRL);
pub const VK_OEM_CUSEL: usize = @intFromEnum(VIRTUAL_KEY.OEM_CUSEL);
pub const VK_OEM_ATTN: usize = @intFromEnum(VIRTUAL_KEY.OEM_ATTN);
pub const VK_OEM_FINISH: usize = @intFromEnum(VIRTUAL_KEY.OEM_FINISH);
pub const VK_OEM_COPY: usize = @intFromEnum(VIRTUAL_KEY.OEM_COPY);
pub const VK_OEM_AUTO: usize = @intFromEnum(VIRTUAL_KEY.OEM_AUTO);
pub const VK_OEM_ENLW: usize = @intFromEnum(VIRTUAL_KEY.OEM_ENLW);
pub const VK_OEM_BACKTAB: usize = @intFromEnum(VIRTUAL_KEY.OEM_BACKTAB);
pub const VK_ATTN: usize = @intFromEnum(VIRTUAL_KEY.ATTN);
pub const VK_CRSEL: usize = @intFromEnum(VIRTUAL_KEY.CRSEL);
pub const VK_EXSEL: usize = @intFromEnum(VIRTUAL_KEY.EXSEL);
pub const VK_EREOF: usize = @intFromEnum(VIRTUAL_KEY.EREOF);
pub const VK_PLAY: usize = @intFromEnum(VIRTUAL_KEY.PLAY);
pub const VK_ZOOM: usize = @intFromEnum(VIRTUAL_KEY.ZOOM);
pub const VK_NONAME: usize = @intFromEnum(VIRTUAL_KEY.NONAME);
pub const VK_PA1: usize = @intFromEnum(VIRTUAL_KEY.PA1);
pub const VK_OEM_CLEAR: usize = @intFromEnum(VIRTUAL_KEY.OEM_CLEAR);
