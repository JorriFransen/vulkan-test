pub const WM = enum(u32) {
    NULL = 0,
    CREATE = 1,
    DESTROY = 2,
    MOVE = 3,
    SIZE = 5,
    ACTIVATE = 6,
    SETFOCUS = 7,
    KILLFOCUS = 8,
    ENABLE = 10,
    SETREDRAW = 11,
    SETTEXT = 12,
    GETTEXT = 13,
    GETTEXTLENGTH = 14,
    PAINT = 15,
    CLOSE = 16,
    QUERYENDSESSION = 17,
    QUIT = 18,
    QUERYOPEN = 19,
    ERASEBKGND = 20,
    SYSCOLORCHANGE = 21,
    ENDSESSION = 22,
    SYSTEMERROR = 23,
    SHOWWINDOW = 24,
    CTLCOLOR = 25,
    WININICHANGE = 26,
    // SETTINGCHANGE = 26,
    DEVMODECHANGE = 27,
    ACTIVATEAPP = 28,
    FONTCHANGE = 29,
    TIMECHANGE = 30,
    CANCELMODE = 31,
    SETCURSOR = 32,
    MOUSEACTIVATE = 33,
    CHILDACTIVATE = 34,
    QUEUESYNC = 35,
    GETMINMAXINFO = 36,
    PAINTICON = 38,
    ICONERASEBKGND = 39,
    NEXTDLGCTL = 40,
    SPOOLERSTATUS = 42,
    DRAWITEM = 43,
    MEASUREITEM = 44,
    DELETEITEM = 45,
    VKEYTOITEM = 46,
    CHARTOITEM = 47,

    SETFONT = 48,
    GETFONT = 49,
    SETHOTKEY = 50,
    GETHOTKEY = 51,
    QUERYDRAGICON = 55,
    COMPAREITEM = 57,
    COMPACTING = 65,
    WINDOWPOSCHANGING = 70,
    WINDOWPOSCHANGED = 71,
    POWER = 72,
    COPYDATA = 74,
    CANCELJOURNAL = 75,
    NOTIFY = 78,
    INPUTLANGCHANGEREQUEST = 80,
    INPUTLANGCHANGE = 81,
    TCARD = 82,
    HELP = 83,
    USERCHANGED = 84,
    NOTIFYFORMAT = 85,
    CONTEXTMENU = 123,
    STYLECHANGING = 124,
    STYLECHANGED = 125,
    DISPLAYCHANGE = 126,
    GETICON = 127,
    SETICON = 128,

    NCCREATE = 129,
    NCDESTROY = 130,
    NCCALCSIZE = 131,
    NCHITTEST = 132,
    NCPAINT = 133,
    NCACTIVATE = 134,
    GETDLGCODE = 135,

    UAHDESTROYWINDOW = 144,
    UAHDRAWMENU = 145,
    UAHDRAWMENUITEM = 146,
    UAHINITMENU = 147,
    UAHMEASUREMENUITEM = 148,
    UAHNCPAINTMENUPOPUP = 149,

    NCMOUSEMOVE = 160,
    NCLBUTTONDOWN = 161,
    NCLBUTTONUP = 162,
    NCLBUTTONDBLCLK = 163,
    NCRBUTTONDOWN = 164,
    NCRBUTTONUP = 165,
    NCRBUTTONDBLCLK = 166,
    NCMBUTTONDOWN = 167,
    NCMBUTTONUP = 168,
    NCMBUTTONDBLCLK = 169,

    // KEYFIRST = 256,
    KEYDOWN = 256,
    KEYUP = 257,
    CHAR = 258,
    DEADCHAR = 259,
    SYSKEYDOWN = 260,
    SYSKEYUP = 261,
    SYSCHAR = 262,
    SYSDEADCHAR = 263,
    KEYLAST = 264,

    IME_STARTCOMPOSITION = 269,
    IME_ENDCOMPOSITION = 270,
    IME_COMPOSITION = 271,
    // IME_KEYLAST = 271,

    INITDIALOG = 272,
    COMMAND = 273,
    SYSCOMMAND = 274,
    TIMER = 275,
    HSCROLL = 276,
    VSCROLL = 277,
    INITMENU = 278,
    INITMENUPOPUP = 279,
    MENUSELECT = 287,
    MENUCHAR = 288,
    ENTERIDLE = 289,

    CTLCOLORMSGBOX = 306,
    CTLCOLOREDIT = 307,
    CTLCOLORLISTBOX = 308,
    CTLCOLORBTN = 309,
    CTLCOLORDLG = 310,
    CTLCOLORSCROLLBAR = 311,
    CTLCOLORSTATIC = 312,

    // MOUSEFIRST = 512,
    MOUSEMOVE = 512,
    LBUTTONDOWN = 513,
    LBUTTONUP = 514,
    LBUTTONDBLCLK = 515,
    RBUTTONDOWN = 516,
    RBUTTONUP = 517,
    RBUTTONDBLCLK = 518,
    MBUTTONDOWN = 519,
    MBUTTONUP = 520,
    MBUTTONDBLCLK = 521,
    MOUSEWHEEL = 522,
    MOUSEHWHEEL = 526,

    PARENTNOTIFY = 528,
    ENTERMENULOOP = 529,
    EXITMENULOOP = 530,
    NEXTMENU = 531,
    SIZING = 532,
    CAPTURECHANGED = 533,
    MOVING = 534,
    POWERBROADCAST = 536,
    DEVICECHANGE = 537,

    MDICREATE = 544,
    MDIDESTROY = 545,
    MDIACTIVATE = 546,
    MDIRESTORE = 547,
    MDINEXT = 548,
    MDIMAXIMIZE = 549,
    MDITILE = 550,
    MDICASCADE = 551,
    MDIICONARRANGE = 552,
    MDIGETACTIVE = 553,
    MDISETMENU = 560,
    ENTERSIZEMOVE = 561,
    EXITSIZEMOVE = 562,
    DROPFILES = 563,
    MDIREFRESHMENU = 564,

    IME_SETCONTEXT = 641,
    IME_NOTIFY = 642,
    IME_CONTROL = 643,
    IME_COMPOSITIONFULL = 644,
    IME_SELECT = 645,
    IME_CHAR = 646,
    IME_KEYDOWN = 656,
    IME_KEYUP = 657,

    MOUSEHOVER = 673,
    NCMOUSELEAVE = 674,
    MOUSELEAVE = 675,

    CUT = 768,
    COPY = 769,
    PASTE = 770,
    CLEAR = 771,
    UNDO = 772,

    RENDERFORMAT = 773,
    RENDERALLFORMATS = 774,
    DESTROYCLIPBOARD = 775,
    DRAWCLIPBOARD = 776,
    PAINTCLIPBOARD = 777,
    VSCROLLCLIPBOARD = 778,
    SIZECLIPBOARD = 779,
    ASKCBFORMATNAME = 780,
    CHANGECBCHAIN = 781,
    HSCROLLCLIPBOARD = 782,
    QUERYNEWPALETTE = 783,
    PALETTEISCHANGING = 784,
    PALETTECHANGED = 785,

    HOTKEY = 786,
    PRINT = 791,
    PRINTCLIENT = 792,

    DWMCOMPOSITIONCHANGED = 798,
    DWMNCRENDERINGCHANGED = 799,
    DWMCOLORIZATIONCOLORCHANGED = 800,

    HANDHELDFIRST = 856,
    HANDHELDLAST = 863,
    PENWINFIRST = 896,
    PENWINLAST = 911,
    COALESCE_FIRST = 912,
    COALESCE_LAST = 927,
    // DDE_FIRST = 992,
    DDE_INITIATE = 992,
    DDE_TERMINATE = 993,
    DDE_ADVISE = 994,
    DDE_UNADVISE = 995,
    DDE_ACK = 996,
    DDE_DATA = 997,
    DDE_REQUEST = 998,
    DDE_POKE = 999,
    DDE_EXECUTE = 1000,
    // DDE_LAST = 1000,

    USER = 1024,
    APP = 32768,
};

pub const WM_NULL: u32 = @intFromEnum(WM.NULL);
pub const WM_CREATE: u32 = @intFromEnum(WM.CREATE);
pub const WM_DESTROY: u32 = @intFromEnum(WM.DESTROY);
pub const WM_MOVE: u32 = @intFromEnum(WM.MOVE);
pub const WM_SIZE: u32 = @intFromEnum(WM.SIZE);
pub const WM_ACTIVATE: u32 = @intFromEnum(WM.ACTIVATE);
pub const WM_SETFOCUS: u32 = @intFromEnum(WM.SETFOCUS);
pub const WM_KILLFOCUS: u32 = @intFromEnum(WM.KILLFOCUS);
pub const WM_ENABLE: u32 = @intFromEnum(WM.ENABLE);
pub const WM_SETREDRAW: u32 = @intFromEnum(WM.SETREDRAW);
pub const WM_SETTEXT: u32 = @intFromEnum(WM.SETTEXT);
pub const WM_GETTEXT: u32 = @intFromEnum(WM.GETTEXT);
pub const WM_GETTEXTLENGTH: u32 = @intFromEnum(WM.GETTEXTLENGTH);
pub const WM_PAINT: u32 = @intFromEnum(WM.PAINT);
pub const WM_CLOSE: u32 = @intFromEnum(WM.CLOSE);
pub const WM_QUERYENDSESSION: u32 = @intFromEnum(WM.QUERYENDSESSION);
pub const WM_QUIT: u32 = @intFromEnum(WM.QUIT);
pub const WM_QUERYOPEN: u32 = @intFromEnum(WM.QUERYOPEN);
pub const WM_ERASEBKGND: u32 = @intFromEnum(WM.ERASEBKGND);
pub const WM_SYSCOLORCHANGE: u32 = @intFromEnum(WM.SYSCOLORCHANGE);
pub const WM_ENDSESSION: u32 = @intFromEnum(WM.ENDSESSION);
pub const WM_SYSTEMERROR: u32 = @intFromEnum(WM.SYSTEMERROR);
pub const WM_SHOWWINDOW: u32 = @intFromEnum(WM.SHOWWINDOW);
pub const WM_CTLCOLOR: u32 = @intFromEnum(WM.CTLCOLOR);
pub const WM_WININICHANGE: u32 = @intFromEnum(WM.WININICHANGE);
pub const WM_DEVMODECHANGE: u32 = @intFromEnum(WM.DEVMODECHANGE);
pub const WM_ACTIVATEAPP: u32 = @intFromEnum(WM.ACTIVATEAPP);
pub const WM_FONTCHANGE: u32 = @intFromEnum(WM.FONTCHANGE);
pub const WM_TIMECHANGE: u32 = @intFromEnum(WM.TIMECHANGE);
pub const WM_CANCELMODE: u32 = @intFromEnum(WM.CANCELMODE);
pub const WM_SETCURSOR: u32 = @intFromEnum(WM.SETCURSOR);
pub const WM_MOUSEACTIVATE: u32 = @intFromEnum(WM.MOUSEACTIVATE);
pub const WM_CHILDACTIVATE: u32 = @intFromEnum(WM.CHILDACTIVATE);
pub const WM_QUEUESYNC: u32 = @intFromEnum(WM.QUEUESYNC);
pub const WM_GETMINMAXINFO: u32 = @intFromEnum(WM.GETMINMAXINFO);
pub const WM_PAINTICON: u32 = @intFromEnum(WM.PAINTICON);
pub const WM_ICONERASEBKGND: u32 = @intFromEnum(WM.ICONERASEBKGND);
pub const WM_NEXTDLGCTL: u32 = @intFromEnum(WM.NEXTDLGCTL);
pub const WM_SPOOLERSTATUS: u32 = @intFromEnum(WM.SPOOLERSTATUS);
pub const WM_DRAWITEM: u32 = @intFromEnum(WM.DRAWITEM);
pub const WM_MEASUREITEM: u32 = @intFromEnum(WM.MEASUREITEM);
pub const WM_DELETEITEM: u32 = @intFromEnum(WM.DELETEITEM);
pub const WM_VKEYTOITEM: u32 = @intFromEnum(WM.VKEYTOITEM);
pub const WM_CHARTOITEM: u32 = @intFromEnum(WM.CHARTOITEM);
pub const WM_SETFONT: u32 = @intFromEnum(WM.SETFONT);
pub const WM_GETFONT: u32 = @intFromEnum(WM.GETFONT);
pub const WM_SETHOTKEY: u32 = @intFromEnum(WM.SETHOTKEY);
pub const WM_GETHOTKEY: u32 = @intFromEnum(WM.GETHOTKEY);
pub const WM_QUERYDRAGICON: u32 = @intFromEnum(WM.QUERYDRAGICON);
pub const WM_COMPAREITEM: u32 = @intFromEnum(WM.COMPAREITEM);
pub const WM_COMPACTING: u32 = @intFromEnum(WM.COMPACTING);
pub const WM_WINDOWPOSCHANGING: u32 = @intFromEnum(WM.WINDOWPOSCHANGING);
pub const WM_WINDOWPOSCHANGED: u32 = @intFromEnum(WM.WINDOWPOSCHANGED);
pub const WM_POWER: u32 = @intFromEnum(WM.POWER);
pub const WM_COPYDATA: u32 = @intFromEnum(WM.COPYDATA);
pub const WM_CANCELJOURNAL: u32 = @intFromEnum(WM.CANCELJOURNAL);
pub const WM_NOTIFY: u32 = @intFromEnum(WM.NOTIFY);
pub const WM_INPUTLANGCHANGEREQUEST: u32 = @intFromEnum(WM.INPUTLANGCHANGEREQUEST);
pub const WM_INPUTLANGCHANGE: u32 = @intFromEnum(WM.INPUTLANGCHANGE);
pub const WM_TCARD: u32 = @intFromEnum(WM.TCARD);
pub const WM_HELP: u32 = @intFromEnum(WM.HELP);
pub const WM_USERCHANGED: u32 = @intFromEnum(WM.USERCHANGED);
pub const WM_NOTIFYFORMAT: u32 = @intFromEnum(WM.NOTIFYFORMAT);
pub const WM_CONTEXTMENU: u32 = @intFromEnum(WM.CONTEXTMENU);
pub const WM_STYLECHANGING: u32 = @intFromEnum(WM.STYLECHANGING);
pub const WM_STYLECHANGED: u32 = @intFromEnum(WM.STYLECHANGED);
pub const WM_DISPLAYCHANGE: u32 = @intFromEnum(WM.DISPLAYCHANGE);
pub const WM_GETICON: u32 = @intFromEnum(WM.GETICON);
pub const WM_SETICON: u32 = @intFromEnum(WM.SETICON);
pub const WM_NCCREATE: u32 = @intFromEnum(WM.NCCREATE);
pub const WM_NCDESTROY: u32 = @intFromEnum(WM.NCDESTROY);
pub const WM_NCCALCSIZE: u32 = @intFromEnum(WM.NCCALCSIZE);
pub const WM_NCHITTEST: u32 = @intFromEnum(WM.NCHITTEST);
pub const WM_NCPAINT: u32 = @intFromEnum(WM.NCPAINT);
pub const WM_NCACTIVATE: u32 = @intFromEnum(WM.NCACTIVATE);
pub const WM_GETDLGCODE: u32 = @intFromEnum(WM.GETDLGCODE);
pub const WM_UAHDESTROYWINDOW: u32 = @intFromEnum(WM.UAHDESTROYWINDOW);
pub const WM_UAHDRAWMENU: u32 = @intFromEnum(WM.UAHDRAWMENU);
pub const WM_UAHDRAWMENUITEM: u32 = @intFromEnum(WM.UAHDRAWMENUITEM);
pub const WM_UAHINITMENU: u32 = @intFromEnum(WM.UAHINITMENU);
pub const WM_UAHMEASUREMENUITEM: u32 = @intFromEnum(WM.UAHMEASUREMENUITEM);
pub const WM_UAHNCPAINTMENUPOPUP: u32 = @intFromEnum(WM.UAHNCPAINTMENUPOPUP);
pub const WM_NCMOUSEMOVE: u32 = @intFromEnum(WM.NCMOUSEMOVE);
pub const WM_NCLBUTTONDOWN: u32 = @intFromEnum(WM.NCLBUTTONDOWN);
pub const WM_NCLBUTTONUP: u32 = @intFromEnum(WM.NCLBUTTONUP);
pub const WM_NCLBUTTONDBLCLK: u32 = @intFromEnum(WM.NCLBUTTONDBLCLK);
pub const WM_NCRBUTTONDOWN: u32 = @intFromEnum(WM.NCRBUTTONDOWN);
pub const WM_NCRBUTTONUP: u32 = @intFromEnum(WM.NCRBUTTONUP);
pub const WM_NCRBUTTONDBLCLK: u32 = @intFromEnum(WM.NCRBUTTONDBLCLK);
pub const WM_NCMBUTTONDOWN: u32 = @intFromEnum(WM.NCMBUTTONDOWN);
pub const WM_NCMBUTTONUP: u32 = @intFromEnum(WM.NCMBUTTONUP);
pub const WM_NCMBUTTONDBLCLK: u32 = @intFromEnum(WM.NCMBUTTONDBLCLK);
pub const WM_KEYDOWN: u32 = @intFromEnum(WM.KEYDOWN);
pub const WM_KEYUP: u32 = @intFromEnum(WM.KEYUP);
pub const WM_CHAR: u32 = @intFromEnum(WM.CHAR);
pub const WM_DEADCHAR: u32 = @intFromEnum(WM.DEADCHAR);
pub const WM_SYSKEYDOWN: u32 = @intFromEnum(WM.SYSKEYDOWN);
pub const WM_SYSKEYUP: u32 = @intFromEnum(WM.SYSKEYUP);
pub const WM_SYSCHAR: u32 = @intFromEnum(WM.SYSCHAR);
pub const WM_SYSDEADCHAR: u32 = @intFromEnum(WM.SYSDEADCHAR);
pub const WM_KEYLAST: u32 = @intFromEnum(WM.KEYLAST);
pub const WM_IME_STARTCOMPOSITION: u32 = @intFromEnum(WM.IME_STARTCOMPOSITION);
pub const WM_IME_ENDCOMPOSITION: u32 = @intFromEnum(WM.IME_ENDCOMPOSITION);
pub const WM_IME_COMPOSITION: u32 = @intFromEnum(WM.IME_COMPOSITION);
pub const WM_INITDIALOG: u32 = @intFromEnum(WM.INITDIALOG);
pub const WM_COMMAND: u32 = @intFromEnum(WM.COMMAND);
pub const WM_SYSCOMMAND: u32 = @intFromEnum(WM.SYSCOMMAND);
pub const WM_TIMER: u32 = @intFromEnum(WM.TIMER);
pub const WM_HSCROLL: u32 = @intFromEnum(WM.HSCROLL);
pub const WM_VSCROLL: u32 = @intFromEnum(WM.VSCROLL);
pub const WM_INITMENU: u32 = @intFromEnum(WM.INITMENU);
pub const WM_INITMENUPOPUP: u32 = @intFromEnum(WM.INITMENUPOPUP);
pub const WM_MENUSELECT: u32 = @intFromEnum(WM.MENUSELECT);
pub const WM_MENUCHAR: u32 = @intFromEnum(WM.MENUCHAR);
pub const WM_ENTERIDLE: u32 = @intFromEnum(WM.ENTERIDLE);
pub const WM_CTLCOLORMSGBOX: u32 = @intFromEnum(WM.CTLCOLORMSGBOX);
pub const WM_CTLCOLOREDIT: u32 = @intFromEnum(WM.CTLCOLOREDIT);
pub const WM_CTLCOLORLISTBOX: u32 = @intFromEnum(WM.CTLCOLORLISTBOX);
pub const WM_CTLCOLORBTN: u32 = @intFromEnum(WM.CTLCOLORBTN);
pub const WM_CTLCOLORDLG: u32 = @intFromEnum(WM.CTLCOLORDLG);
pub const WM_CTLCOLORSCROLLBAR: u32 = @intFromEnum(WM.CTLCOLORSCROLLBAR);
pub const WM_CTLCOLORSTATIC: u32 = @intFromEnum(WM.CTLCOLORSTATIC);
pub const WM_MOUSEMOVE: u32 = @intFromEnum(WM.MOUSEMOVE);
pub const WM_LBUTTONDOWN: u32 = @intFromEnum(WM.LBUTTONDOWN);
pub const WM_LBUTTONUP: u32 = @intFromEnum(WM.LBUTTONUP);
pub const WM_LBUTTONDBLCLK: u32 = @intFromEnum(WM.LBUTTONDBLCLK);
pub const WM_RBUTTONDOWN: u32 = @intFromEnum(WM.RBUTTONDOWN);
pub const WM_RBUTTONUP: u32 = @intFromEnum(WM.RBUTTONUP);
pub const WM_RBUTTONDBLCLK: u32 = @intFromEnum(WM.RBUTTONDBLCLK);
pub const WM_MBUTTONDOWN: u32 = @intFromEnum(WM.MBUTTONDOWN);
pub const WM_MBUTTONUP: u32 = @intFromEnum(WM.MBUTTONUP);
pub const WM_MBUTTONDBLCLK: u32 = @intFromEnum(WM.MBUTTONDBLCLK);
pub const WM_MOUSEWHEEL: u32 = @intFromEnum(WM.MOUSEWHEEL);
pub const WM_MOUSEHWHEEL: u32 = @intFromEnum(WM.MOUSEHWHEEL);
pub const WM_PARENTNOTIFY: u32 = @intFromEnum(WM.PARENTNOTIFY);
pub const WM_ENTERMENULOOP: u32 = @intFromEnum(WM.ENTERMENULOOP);
pub const WM_EXITMENULOOP: u32 = @intFromEnum(WM.EXITMENULOOP);
pub const WM_NEXTMENU: u32 = @intFromEnum(WM.NEXTMENU);
pub const WM_SIZING: u32 = @intFromEnum(WM.SIZING);
pub const WM_CAPTURECHANGED: u32 = @intFromEnum(WM.CAPTURECHANGED);
pub const WM_MOVING: u32 = @intFromEnum(WM.MOVING);
pub const WM_POWERBROADCAST: u32 = @intFromEnum(WM.POWERBROADCAST);
pub const WM_DEVICECHANGE: u32 = @intFromEnum(WM.DEVICECHANGE);
pub const WM_MDICREATE: u32 = @intFromEnum(WM.MDICREATE);
pub const WM_MDIDESTROY: u32 = @intFromEnum(WM.MDIDESTROY);
pub const WM_MDIACTIVATE: u32 = @intFromEnum(WM.MDIACTIVATE);
pub const WM_MDIRESTORE: u32 = @intFromEnum(WM.MDIRESTORE);
pub const WM_MDINEXT: u32 = @intFromEnum(WM.MDINEXT);
pub const WM_MDIMAXIMIZE: u32 = @intFromEnum(WM.MDIMAXIMIZE);
pub const WM_MDITILE: u32 = @intFromEnum(WM.MDITILE);
pub const WM_MDICASCADE: u32 = @intFromEnum(WM.MDICASCADE);
pub const WM_MDIICONARRANGE: u32 = @intFromEnum(WM.MDIICONARRANGE);
pub const WM_MDIGETACTIVE: u32 = @intFromEnum(WM.MDIGETACTIVE);
pub const WM_MDISETMENU: u32 = @intFromEnum(WM.MDISETMENU);
pub const WM_ENTERSIZEMOVE: u32 = @intFromEnum(WM.ENTERSIZEMOVE);
pub const WM_EXITSIZEMOVE: u32 = @intFromEnum(WM.EXITSIZEMOVE);
pub const WM_DROPFILES: u32 = @intFromEnum(WM.DROPFILES);
pub const WM_MDIREFRESHMENU: u32 = @intFromEnum(WM.MDIREFRESHMENU);
pub const WM_IME_SETCONTEXT: u32 = @intFromEnum(WM.IME_SETCONTEXT);
pub const WM_IME_NOTIFY: u32 = @intFromEnum(WM.IME_NOTIFY);
pub const WM_IME_CONTROL: u32 = @intFromEnum(WM.IME_CONTROL);
pub const WM_IME_COMPOSITIONFULL: u32 = @intFromEnum(WM.IME_COMPOSITIONFULL);
pub const WM_IME_SELECT: u32 = @intFromEnum(WM.IME_SELECT);
pub const WM_IME_CHAR: u32 = @intFromEnum(WM.IME_CHAR);
pub const WM_IME_KEYDOWN: u32 = @intFromEnum(WM.IME_KEYDOWN);
pub const WM_IME_KEYUP: u32 = @intFromEnum(WM.IME_KEYUP);
pub const WM_MOUSEHOVER: u32 = @intFromEnum(WM.MOUSEHOVER);
pub const WM_NCMOUSELEAVE: u32 = @intFromEnum(WM.NCMOUSELEAVE);
pub const WM_MOUSELEAVE: u32 = @intFromEnum(WM.MOUSELEAVE);
pub const WM_CUT: u32 = @intFromEnum(WM.CUT);
pub const WM_COPY: u32 = @intFromEnum(WM.COPY);
pub const WM_PASTE: u32 = @intFromEnum(WM.PASTE);
pub const WM_CLEAR: u32 = @intFromEnum(WM.CLEAR);
pub const WM_UNDO: u32 = @intFromEnum(WM.UNDO);
pub const WM_RENDERFORMAT: u32 = @intFromEnum(WM.RENDERFORMAT);
pub const WM_RENDERALLFORMATS: u32 = @intFromEnum(WM.RENDERALLFORMATS);
pub const WM_DESTROYCLIPBOARD: u32 = @intFromEnum(WM.DESTROYCLIPBOARD);
pub const WM_DRAWCLIPBOARD: u32 = @intFromEnum(WM.DRAWCLIPBOARD);
pub const WM_PAINTCLIPBOARD: u32 = @intFromEnum(WM.PAINTCLIPBOARD);
pub const WM_VSCROLLCLIPBOARD: u32 = @intFromEnum(WM.VSCROLLCLIPBOARD);
pub const WM_SIZECLIPBOARD: u32 = @intFromEnum(WM.SIZECLIPBOARD);
pub const WM_ASKCBFORMATNAME: u32 = @intFromEnum(WM.ASKCBFORMATNAME);
pub const WM_CHANGECBCHAIN: u32 = @intFromEnum(WM.CHANGECBCHAIN);
pub const WM_HSCROLLCLIPBOARD: u32 = @intFromEnum(WM.HSCROLLCLIPBOARD);
pub const WM_QUERYNEWPALETTE: u32 = @intFromEnum(WM.QUERYNEWPALETTE);
pub const WM_PALETTEISCHANGING: u32 = @intFromEnum(WM.PALETTEISCHANGING);
pub const WM_PALETTECHANGED: u32 = @intFromEnum(WM.PALETTECHANGED);
pub const WM_HOTKEY: u32 = @intFromEnum(WM.HOTKEY);
pub const WM_PRINT: u32 = @intFromEnum(WM.PRINT);
pub const WM_PRINTCLIENT: u32 = @intFromEnum(WM.PRINTCLIENT);
pub const WM_DWMCOMPOSITIONCHANGED: u32 = @intFromEnum(WM.DWMCOMPOSITIONCHANGED);
pub const WM_DWMNCRENDERINGCHANGED: u32 = @intFromEnum(WM.DWMNCRENDERINGCHANGED);
pub const WM_DWMCOLORIZATIONCOLORCHANGED: u32 = @intFromEnum(WM.DWMCOLORIZATIONCOLORCHANGED);
pub const WM_HANDHELDFIRST: u32 = @intFromEnum(WM.HANDHELDFIRST);
pub const WM_HANDHELDLAST: u32 = @intFromEnum(WM.HANDHELDLAST);
pub const WM_PENWINFIRST: u32 = @intFromEnum(WM.PENWINFIRST);
pub const WM_PENWINLAST: u32 = @intFromEnum(WM.PENWINLAST);
pub const WM_COALESCE_FIRST: u32 = @intFromEnum(WM.COALESCE_FIRST);
pub const WM_COALESCE_LAST: u32 = @intFromEnum(WM.COALESCE_LAST);
pub const WM_DDE_INITIATE: u32 = @intFromEnum(WM.DDE_INITIATE);
pub const WM_DDE_TERMINATE: u32 = @intFromEnum(WM.DDE_TERMINATE);
pub const WM_DDE_ADVISE: u32 = @intFromEnum(WM.DDE_ADVISE);
pub const WM_DDE_UNADVISE: u32 = @intFromEnum(WM.DDE_UNADVISE);
pub const WM_DDE_ACK: u32 = @intFromEnum(WM.DDE_ACK);
pub const WM_DDE_DATA: u32 = @intFromEnum(WM.DDE_DATA);
pub const WM_DDE_REQUEST: u32 = @intFromEnum(WM.DDE_REQUEST);
pub const WM_DDE_POKE: u32 = @intFromEnum(WM.DDE_POKE);
pub const WM_DDE_EXECUTE: u32 = @intFromEnum(WM.DDE_EXECUTE);
pub const WM_USER: u32 = @intFromEnum(WM.USER);
pub const WM_APP: u32 = @intFromEnum(WM.APP);

pub const NIN_SELECT = WM_USER;
